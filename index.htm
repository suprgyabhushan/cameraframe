<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, user-scalable=yes, initial-scale=1, maximum-scale=1">
  <meta name="description" content="Smart Device Camera Template for HTML, CSS, JS and WebRTC">
  <meta name="keywords" content="HTML,CSS,JavaScript, WebRTC, Camera">
  <meta name="author" content="Kasper Kamperman">
  <title>Mobile First Camera Template</title>
  <script type="text/javascript" src="js/clmtrackr.js"></script>

  <link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>
  <div id="container">
    <div id="vid_container">
       
        <video id="video" autoplay playsinline></video>
        <canvas id="camerasensor" width="400" height="300"></canvas>
        <div id="video_overlay"></div>
    </div>
    <div id="gui_controls">
        
        <button id="switchCameraButton" name="switch Camera" type="button" aria-pressed="false"></button>
        <button id="takePhotoButton" name="take Photo" type="button">	</button>
        
        <button id="toggleFullScreenButton" name="toggle FullScreen" type="button" aria-pressed="false"></button>
        <img src="//:0" alt="" id="cameraoutput">
    </div>
  </div> 
  <script src="js/DetectRTC.min.js"></script>
  <script src="js/adapter.min.js"></script>  
  <script src="js/screenfull.min.js"></script>
  <script src="js/howler.core.min.js"></script>
  <script src="js/main.js"></script>
  <!--<script type="text/javascript">
  var videoInput = document.getElementById('video');
  var ctracker = new clm.tracker();
  ctracker.init();
  ctracker.start(videoInput);
  </script>
  <script type="text/javascript">
  function positionLoop() {
    requestAnimationFrame(positionLoop);
    var positions = ctracker.getCurrentPosition();
    // positions = [[x_0, y_0], [x_1,y_1], ... ]
    // do something with the positions ...
  }
  positionLoop();
  </script>
  <script type="text/javascript">
  var canvasInput = document.getElementById('camerasensor');
  var cc = canvasInput.getContext('2d');
  function drawLoop() {
    requestAnimationFrame(drawLoop);
    cc.clearRect(0, 0, canvasInput.width, canvasInput.height);
    ctracker.draw(canvasInput);
  }
  drawLoop();
  </script>-->
</body>
</html>
